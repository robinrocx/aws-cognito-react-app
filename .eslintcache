[{"/Users/robinrajrajan/Projects/MyTreasure/test-app-aws-cognito/src/index.js":"1","/Users/robinrajrajan/Projects/MyTreasure/test-app-aws-cognito/src/reportWebVitals.js":"2","/Users/robinrajrajan/Projects/MyTreasure/test-app-aws-cognito/src/App.js":"3","/Users/robinrajrajan/Projects/MyTreasure/test-app-aws-cognito/src/components/Home.js":"4","/Users/robinrajrajan/Projects/MyTreasure/test-app-aws-cognito/src/components/login.js":"5","/Users/robinrajrajan/Projects/MyTreasure/test-app-aws-cognito/src/components/home.js":"6","/Users/robinrajrajan/Projects/MyTreasure/test-app-aws-cognito/src/components/forgot-password.js":"7","/Users/robinrajrajan/Projects/MyTreasure/test-app-aws-cognito/src/components/change-password.js":"8","/Users/robinrajrajan/Projects/MyTreasure/test-app-aws-cognito/src/components/sign-out.js":"9","/Users/robinrajrajan/Projects/MyTreasure/test-app-aws-cognito/src/helpers/functions.js":"10"},{"size":732,"mtime":1613396895021,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1611144979232,"results":"13","hashOfConfig":"12"},{"size":7907,"mtime":1614691311133,"results":"14","hashOfConfig":"12"},{"size":77,"mtime":1611154612102,"results":"15","hashOfConfig":"16"},{"size":4261,"mtime":1611752838825,"results":"17","hashOfConfig":"12"},{"size":77,"mtime":1611322026365,"results":"18","hashOfConfig":"12"},{"size":2134,"mtime":1611590337984,"results":"19","hashOfConfig":"12"},{"size":2178,"mtime":1611585745806,"results":"20","hashOfConfig":"12"},{"size":934,"mtime":1611580578619,"results":"21","hashOfConfig":"12"},{"size":1719,"mtime":1611994316717,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"ei3xnc",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j3a2vu",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"25"},"/Users/robinrajrajan/Projects/MyTreasure/test-app-aws-cognito/src/index.js",[],["46","47"],"/Users/robinrajrajan/Projects/MyTreasure/test-app-aws-cognito/src/reportWebVitals.js",[],"/Users/robinrajrajan/Projects/MyTreasure/test-app-aws-cognito/src/App.js",[],"/Users/robinrajrajan/Projects/MyTreasure/test-app-aws-cognito/src/components/Home.js",[],"/Users/robinrajrajan/Projects/MyTreasure/test-app-aws-cognito/src/components/login.js",[],"/Users/robinrajrajan/Projects/MyTreasure/test-app-aws-cognito/src/components/home.js",[],"/Users/robinrajrajan/Projects/MyTreasure/test-app-aws-cognito/src/components/forgot-password.js",["48"],"import React from 'react';\nimport functions from '../helpers/functions';\nimport { Redirect } from \"react-router-dom\";\n\nconst { generateCodeForNewPassword, submitCodeForNewPassword } = functions;\n\nclass ForgotPassword extends React.Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        confirmationSent: false,\n        passwordSet: false,\n        code:\"\",\n        newPassword:\"\"\n      }\n    }\n\n    handleClick = async (e)=>{\n      await generateCodeForNewPassword();\n      this.setState({\n        confirmationSent: true,\n        code:\"\",\n        passwordSet: false,\n      });\n    }\n\n    handleCodeChange = (e)=>{\n      this.setState({\n        code: e.target.value,\n      });\n    }\n\n    handleNewPasswordChange = (e)=>{\n      this.setState({\n        newPassword: e.target.value,\n      });\n    }\n\n    handleSubmit = async (e)=>{\n      e.preventDefault();\n      const code = this.state.code;\n      const newPassword = this.state.newPassword;\n      const result = await submitCodeForNewPassword(code, newPassword);\n      this.setState({\n        passwordSet: true,\n        confirmationSent: false,\n      });\n    }\n\n    render() {\n      if(this.props.authState.user){\n        return (\n          <Redirect to={\"/\"} />\n        )\n      }else{\n        return (\n          <>\n            <div>\n              <button onClick = { this.handleClick }>Generate Code</button>\n            </div>\n            { this.state.confirmationSent && \n            <form onSubmit={ this.handleSubmit }>\n              <div>\n                <label>\n                  Please enter the code sent to your email :\n                  <input type=\"text\" onChange={ this.handleCodeChange } />\n                </label>\n                <label>\n                  New password :\n                  <input type=\"text\" onChange={ this.handleNewPasswordChange } />\n                </label>\n              </div>\n              <input type=\"submit\" value=\"Submit\" />\n            </form>}\n\n            { this.state.passwordSet && <p>Password set successfully. You can login now</p>}\n          </>\n        )\n      }\n    }\n}\n  \nexport default ForgotPassword;","/Users/robinrajrajan/Projects/MyTreasure/test-app-aws-cognito/src/components/change-password.js",[],"/Users/robinrajrajan/Projects/MyTreasure/test-app-aws-cognito/src/components/sign-out.js",[],"/Users/robinrajrajan/Projects/MyTreasure/test-app-aws-cognito/src/helpers/functions.js",["49","50"],"import 'crypto-js/lib-typedarrays';\nimport { Auth } from 'aws-amplify';\n\nconst functions = {\n  login: async (username, password)=>{\n    try {\n      const user = await Auth.signIn(username, password);\n      return user;\n    } catch (error) {\n      console.log('error signing in', error);\n      return error;\n    }\n  },\n  setNewPassword: async (name, newPassword, user)=>{\n    try{\n      const loggedUser = await Auth.completeNewPassword(\n        user,\n        newPassword,\n        {\n            name\n        }\n      );\n\n      return loggedUser;\n    }catch(error){\n      console.log(\"error changing password : \", error);\n    }\n  },\n\n  changePassword: async (oldPassword, newPassword)=>{\n    try{\n      const user = await Auth.currentAuthenticatedUser();\n      if(!user){\n        console.log(\"The user is not authenticated\");\n        return false;\n      }\n\n      const result = await Auth.changePassword(user, oldPassword, newPassword);\n      return result;\n    }catch(error){\n      console.log(\"Error changing password : \", error);\n      return error;\n    }\n  },\n\n  generateCodeForNewPassword: async ()=>{\n    const result = await Auth.forgotPassword(\"robin@getproperly.com\");\n\n    return true;\n  },\n\n  submitCodeForNewPassword: async(code, newPassword)=>{\n    const result = await Auth.forgotPasswordSubmit(\"robin@getproperly.com\", code, newPassword);\n\n    return true;\n  },\n\n  signOut: async ()=>{\n    try{\n      await Auth.signOut();\n    }catch(error){\n      console.log(\"Error signing out : \", error);\n      return error;\n    }\n  },\n\n  socialSignIn: async ()=>{\n    const result = await Auth.federatedSignIn({provider: 'Google'});\n    console.log(\"result : \", result);\n    return true;\n  }\n}\nexport default functions;",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":43,"column":13,"nodeType":"57","messageId":"58","endLine":43,"endColumn":19},{"ruleId":"55","severity":1,"message":"56","line":47,"column":11,"nodeType":"57","messageId":"58","endLine":47,"endColumn":17},{"ruleId":"55","severity":1,"message":"56","line":53,"column":11,"nodeType":"57","messageId":"58","endLine":53,"endColumn":17},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'result' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]